/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import gerenciapenalti.Batedor;
import gerenciapenalti.Goleiro;
import gerenciapenalti.Jogador;
import gerenciapenalti.Ponto;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Juliano
 */
public class JFrameJogo extends javax.swing.JFrame {

    //vetor de jogadores Jog e PC
    private Jogador jogadoresJog[] = new Jogador[6];
    private Jogador jogadoresPC[] = new Jogador[6];
    //guardar placar
    private int pontosJog = 0;
    private int pontosPC = 0;
    //indica a escolha do Jogador e do Computador
    private Ponto escolhaJogador;
    private Ponto escolhaPC;
    //controla a quantidade de cobranças irá jogar;
    private int i = 1;
    private boolean acrescimo = false;
    //controla o estado do jogo
    private EstadoJogo estadoJogo = EstadoJogo.CHUTANDO;

    public JFrameJogo(Jogador jogadores1[], Jogador jogadores2[]) {
        initComponents();
        jButtonJogarNovamente.setVisible(false);
        jogadoresJog = jogadores1;
        jogadoresPC = jogadores2;
        jLabelVez.setText("É a sua vez!");
        jLabelPlacar.setText(this.pontosJog + " x " + this.pontosPC);
        jTextAreaMostraJogo.setText("Escolha onde deseja chutar com o Jogador " + jogadoresJog[i].getNome());

    }

    private JFrameJogo() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonEC = new javax.swing.JButton();
        jButtonCC = new javax.swing.JButton();
        jButtonDC = new javax.swing.JButton();
        jButtonEB = new javax.swing.JButton();
        jButtonCB = new javax.swing.JButton();
        jButtonDB = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMostraJogo = new javax.swing.JTextArea();
        jLabelVez = new javax.swing.JLabel();
        jLabelPlacar = new javax.swing.JLabel();
        jLabelImagemTrave = new javax.swing.JLabel();
        jLabelInstrucao = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonJogarNovamente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonEC.setPreferredSize(new java.awt.Dimension(100, 90));
        jButtonEC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonECActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEC, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        jButtonCC.setPreferredSize(new java.awt.Dimension(100, 90));
        jButtonCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCCActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, -1, -1));

        jButtonDC.setPreferredSize(new java.awt.Dimension(100, 90));
        jButtonDC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDCActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDC, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, -1, -1));

        jButtonEB.setPreferredSize(new java.awt.Dimension(100, 90));
        jButtonEB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEBActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEB, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, -1, -1));

        jButtonCB.setPreferredSize(new java.awt.Dimension(100, 90));
        jButtonCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCBActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, -1, -1));

        jButtonDB.setPreferredSize(new java.awt.Dimension(100, 90));
        jButtonDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDBActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDB, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, -1, -1));

        jTextAreaMostraJogo.setEditable(false);
        jTextAreaMostraJogo.setColumns(20);
        jTextAreaMostraJogo.setRows(5);
        jScrollPane1.setViewportView(jTextAreaMostraJogo);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 328, 182));

        jLabelVez.setText("jLabel1");
        getContentPane().add(jLabelVez, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 31, -1, -1));

        jLabelPlacar.setText("jLabel2");
        getContentPane().add(jLabelPlacar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 31, -1, -1));

        jLabelImagemTrave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/gol2.png"))); // NOI18N
        getContentPane().add(jLabelImagemTrave, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 422, 292));

        jLabelInstrucao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelInstrucao.setForeground(new java.awt.Color(0, 102, 102));
        jLabelInstrucao.setText("Selecione onde deseja chutar/defender");
        getContentPane().add(jLabelInstrucao, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 230, 20));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 20, 70));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 580, 10, 10));

        jButtonJogarNovamente.setText("Jogar Novamente");
        jButtonJogarNovamente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonJogarNovamenteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonJogarNovamente, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 590, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonECActionPerformed
        // TODO add your handling code here:
        estadoBotoes(false);
        escolhaJogador = Ponto.esquerdaCima;
        if (estadoJogo == EstadoJogo.CHUTANDO) {
            jogoChute(i);
            estadoJogo = EstadoJogo.DEFENDENDO;
            estadoBotoes(true);

        } else if (acrescimo == false) {
            jogoDefesa(i);
            estadoJogo = EstadoJogo.CHUTANDO;
            estadoBotoes(true);
        } else {
            jogoDefesa(i);
            confereResultado();
        }
    }//GEN-LAST:event_jButtonECActionPerformed

    private void jButtonCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCCActionPerformed
        // TODO add your handling code here:
        estadoBotoes(false);
        escolhaJogador = Ponto.meioCima;
        if (estadoJogo == EstadoJogo.CHUTANDO) {
            jogoChute(i);
            estadoJogo = EstadoJogo.DEFENDENDO;
            estadoBotoes(true);

        } else if (acrescimo == false) {
            jogoDefesa(i);
            estadoJogo = EstadoJogo.CHUTANDO;
            estadoBotoes(true);
        } else {
            jogoDefesa(i);
            confereResultado();

        }
    }//GEN-LAST:event_jButtonCCActionPerformed

    private void jButtonDCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDCActionPerformed
        // TODO add your handling code here:
        estadoBotoes(false);
        escolhaJogador = Ponto.direitaCima;
        if (estadoJogo == EstadoJogo.CHUTANDO) {
            jogoChute(i);
            estadoJogo = EstadoJogo.DEFENDENDO;
            estadoBotoes(true);

        } else if (acrescimo == false) {
            jogoDefesa(i);
            estadoJogo = EstadoJogo.CHUTANDO;
            estadoBotoes(true);
        } else {
            jogoDefesa(i);
            confereResultado();

        }
    }//GEN-LAST:event_jButtonDCActionPerformed

    private void jButtonEBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEBActionPerformed
        // TODO add your handling code here:
        estadoBotoes(false);
        escolhaJogador = Ponto.esquerdaBaixo;
        if (estadoJogo == EstadoJogo.CHUTANDO) {
            jogoChute(i);
            estadoJogo = EstadoJogo.DEFENDENDO;
            estadoBotoes(true);

        } else if (acrescimo == false) {
            jogoDefesa(i);
            estadoJogo = EstadoJogo.CHUTANDO;
            estadoBotoes(true);
        } else {
            jogoDefesa(i);
            confereResultado();

        }
    }//GEN-LAST:event_jButtonEBActionPerformed

    private void jButtonCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCBActionPerformed
        // TODO add your handling code here:
        estadoBotoes(false);
        escolhaJogador = Ponto.meioBaixo;
        if (estadoJogo == EstadoJogo.CHUTANDO) {
            jogoChute(i);
            estadoJogo = EstadoJogo.DEFENDENDO;
            estadoBotoes(true);

        } else if (acrescimo == false) {
            jogoDefesa(i);
            estadoJogo = EstadoJogo.CHUTANDO;
            estadoBotoes(true);
        } else {
            jogoDefesa(i);
            confereResultado();

        }
    }//GEN-LAST:event_jButtonCBActionPerformed

    private void jButtonDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDBActionPerformed
        // TODO add your handling code here:
        estadoBotoes(false);
        escolhaJogador = Ponto.direitaBaixo;
        if (estadoJogo == EstadoJogo.CHUTANDO) {
            jogoChute(i);
            estadoJogo = EstadoJogo.DEFENDENDO;
            estadoBotoes(true);

        } else if (acrescimo == false) {
            jogoDefesa(i);
            estadoJogo = EstadoJogo.CHUTANDO;
            estadoBotoes(true);
        } else {
            jogoDefesa(i);
            confereResultado();

        }
    }//GEN-LAST:event_jButtonDBActionPerformed

    private void jButtonJogarNovamenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonJogarNovamenteActionPerformed
        // TODO add your handling code here:
        JFrameSelecionaTime jFrameSelecionaTime = new JFrameSelecionaTime();
        this.setVisible(false);
        jFrameSelecionaTime.setLocationRelativeTo(null);
        jFrameSelecionaTime.setVisible(true);
    }//GEN-LAST:event_jButtonJogarNovamenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameJogo().setVisible(true);
            }
        });
    }

    public void confereResultado() {
        if (pontosJog > pontosPC) {
            JOptionPane.showMessageDialog(null, "Você Ganhou !!!", "Resultado", JOptionPane.INFORMATION_MESSAGE);
            jButtonJogarNovamente.setVisible(true);
            jLabelVez.setText("Vamos Jogar Novamente!");
        } else if (pontosJog < pontosPC) {
            JOptionPane.showMessageDialog(null, "Você Perdeu", "Resultado", JOptionPane.INFORMATION_MESSAGE);
            jButtonJogarNovamente.setVisible(true);
            jLabelVez.setText("Vamos Jogar Novamente!");

        } else {
            estadoJogo = EstadoJogo.CHUTANDO;
            estadoBotoes(true);
        }
    }

    public enum EstadoJogo {
        CHUTANDO,
        DEFENDENDO;
    }

    public Ponto geraPosPC() {
        Random gerador = new Random();
        int controle = gerador.nextInt(6);

        switch (controle) {
            case 0:
                escolhaPC = Ponto.esquerdaCima;
                break;
            case 1:
                escolhaPC = Ponto.meioCima;
                break;
            case 2:
                escolhaPC = Ponto.direitaCima;
                break;
            case 3:
                escolhaPC = Ponto.esquerdaBaixo;
                break;
            case 4:
                escolhaPC = Ponto.meioBaixo;
                break;
            case 5:
                escolhaPC = Ponto.direitaBaixo;
                break;
        }
        return escolhaPC;
    }

    public void estadoBotoes(boolean estado) {
        jButtonCB.setEnabled(estado);
        jButtonCC.setEnabled(estado);
        jButtonDB.setEnabled(estado);
        jButtonDC.setEnabled(estado);
        jButtonEB.setEnabled(estado);
        jButtonEC.setEnabled(estado);
    }

    public void jogoChute(int j) {
        //atualizar confianças
        jogadoresJog[j].getPerfil().confianca += jogadoresJog[j].getTime().getTorcida().aplaudir();
        jogadoresJog[j].getPerfil().confianca -= jogadoresPC[0].getTime().getTorcida().vaiar();
        jogadoresPC[0].getPerfil().confianca += jogadoresPC[0].getTime().getTorcida().aplaudir();
        jogadoresPC[0].getPerfil().confianca -= jogadoresJog[j].getTime().getTorcida().vaiar();
        //atualizar qualidades
        jogadoresJog[j].getPerfil().qualidade *= (jogadoresJog[j].getPerfil().confianca / 100);
        jogadoresPC[0].getPerfil().qualidade *= (jogadoresPC[0].getPerfil().confianca / 100);
        //jogada
        geraPosPC();
        if (((Batedor) jogadoresJog[j]).chutar(escolhaJogador) == true) {
            if (((Goleiro) jogadoresPC[0]).defender(escolhaPC) == true) {
                //os dois erraram
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tChute para fora!");
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[j].getTime().getTorcida().lamentar());
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[0].getTime().getTorcida().comemorar());

            } else {
                //batedor errou e goleiro acertou
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tO Goleiro Defendeu");
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[j].getTime().getTorcida().lamentar());
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[0].getTime().getTorcida().comemorar());
            }
        } else if (((Goleiro) jogadoresPC[0]).defender(escolhaPC) == true) {
            //Batedor acertou e goleiro errou
            jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tÉ Goooooooool!!!");
            jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[j].getTime().getTorcida().comemorar());
            jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[0].getTime().getTorcida().lamentar());
            pontosJog++;
            jLabelPlacar.setText(this.pontosJog + " x " + this.pontosPC);
        } else //os dois acertaram - medir qualidades
        {
            if ((jogadoresPC[0].getPerfil()).getQualidade() > (jogadoresJog[j].getPerfil()).getQualidade()) {
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tGoleiro Defendeu!");
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[j].getTime().getTorcida().lamentar());
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[0].getTime().getTorcida().comemorar());
            } else {
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tÉ Goooooooool!!!");
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[j].getTime().getTorcida().comemorar());
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[0].getTime().getTorcida().lamentar());
                pontosJog++;
                jLabelPlacar.setText(this.pontosJog + " x " + this.pontosPC);
            }
        }
        jLabelVez.setText("Computador Chutando");
        jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\nComputador escolheu onde irá chutar com " + this.jogadoresPC[i].getNome());
        jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nEscolha onde deseja defender com o goleiro " + this.jogadoresJog[0].getNome());
    }

    public void jogoDefesa(int j) {
        //atualizar confianças
        jogadoresJog[0].getPerfil().confianca += jogadoresJog[0].getTime().getTorcida().aplaudir();
        jogadoresJog[0].getPerfil().confianca -= jogadoresPC[j].getTime().getTorcida().vaiar();
        jogadoresPC[j].getPerfil().confianca += jogadoresPC[j].getTime().getTorcida().aplaudir();
        jogadoresPC[j].getPerfil().confianca -= jogadoresJog[0].getTime().getTorcida().vaiar();
        //atualizar qualidades
        jogadoresJog[0].getPerfil().qualidade *= (jogadoresJog[0].getPerfil().confianca / 100);
        jogadoresPC[j].getPerfil().qualidade *= (jogadoresPC[j].getPerfil().confianca / 100);
        //jogada
        geraPosPC();
        if (((Batedor) jogadoresPC[j]).chutar(escolhaPC) == true) {
            if (((Goleiro) jogadoresJog[0]).defender(escolhaJogador) == true) {
                //os dois erraram
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tChute para fora!");
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[0].getTime().getTorcida().comemorar());
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[j].getTime().getTorcida().lamentar());
            } else {
                //batedor errou e goleiro acertou
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tO Goleiro Defendeu");
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[0].getTime().getTorcida().comemorar());
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[j].getTime().getTorcida().lamentar());
            }
        } else if (((Goleiro) jogadoresJog[0]).defender(escolhaJogador) == true) {
            //Batedor acertou e goleiro errou
            jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tÉ Goooooooool!!!");
            jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[0].getTime().getTorcida().lamentar());
            jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[j].getTime().getTorcida().comemorar());
            pontosPC++;
            jLabelPlacar.setText(this.pontosJog + " x " + this.pontosPC);
        } else //os dois acertaram - medir confianças
        {
            if ((jogadoresJog[0].getPerfil()).getQualidade() > (jogadoresPC[j].getPerfil()).getQualidade()) {
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tO Goleiro Defendeu!");
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[0].getTime().getTorcida().comemorar());
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[j].getTime().getTorcida().lamentar());
            } else {
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\tÉ Goooooooool!!!");
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nSua Torcida: " + jogadoresJog[0].getTime().getTorcida().lamentar());
                jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\nTorcida adversária: " + jogadoresPC[j].getTime().getTorcida().comemorar());
                pontosPC++;
                jLabelPlacar.setText(this.pontosJog + " x " + this.pontosPC);
            }
        }
        jLabelVez.setText("Sua vez de chutar!");
        switch (i) {
            case 4:
                i++;
                acrescimo = true;
                break;
            case 5:
                i = 1;
                break;
            default:
                i++;
                break;
        }
        jTextAreaMostraJogo.setText(jTextAreaMostraJogo.getText() + "\n\nEscolha onde deseja chutar com o jogador " + this.jogadoresJog[i].getNome());

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCB;
    private javax.swing.JButton jButtonCC;
    private javax.swing.JButton jButtonDB;
    private javax.swing.JButton jButtonDC;
    private javax.swing.JButton jButtonEB;
    private javax.swing.JButton jButtonEC;
    private javax.swing.JButton jButtonJogarNovamente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelImagemTrave;
    private javax.swing.JLabel jLabelInstrucao;
    private javax.swing.JLabel jLabelPlacar;
    private javax.swing.JLabel jLabelVez;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaMostraJogo;
    // End of variables declaration//GEN-END:variables
}
